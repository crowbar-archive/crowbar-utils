#!/bin/bash
#
# Copyright 2013, Dell
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Utility to move virtual envs to/from ssd and spindle storage
# archive_env moves to spindle
# activate_env moves to ssd 
#
# this is mainly some sanity checking and path expansion sugar around
# an mv(1) command

function error()
{
    echo "Error: "${1}
    exit 1
}

ssd_dir="C:/Users/NT_USER/Documents/Virtual Machines"
spindle_dir="D:/Documents/Virtual Machines"

if [[ ${0##*/} = "activate_env" ]] ; then
    src=${spindle_dir}
    dest=${ssd_dir}
else
    # archive mode
    src=${ssd_dir}
    dest=${spindle_dir}
fi

virtual_env=${1:-'current_env'}

# sanity: existence checks for source and target
# also, the usage and size checks depend on these directories existing 

if [[ ! -d ${src}/${virtual_env} ]]; then
    error "source ${src}/${virtual_env} does not exit"
fi
if [[ ! -d ${dest} ]]; then
    error "destination ${dest} does not exit"
    exit 1
fi
if [[ -d ${dest}/${virtual_env} ]]; then
    error "destination ${dest}/${virtual_env} already exists"
    exit 1
fi

# calc sizes
# $ df -P -BM
# Filesystem     1048576-blocks    Used Available Capacity Mounted on
# C:/Cygwin/bin         244197M 176278M    67920M      73% /usr/bin
# C:/Cygwin/lib         244197M 176278M    67920M      73% /usr/lib
# C:/Cygwin             244197M 176278M    67920M      73% /
# C:                    244197M 176278M    67920M      73% /cygdrive/c
# D:                    715275M 324724M   390552M      46% /cygdrive/d

dest_space=`df -B1 "${dest}" | awk 'FNR==2 {print $4}'`
# echo ${dest_space}

# 
# $ du -P -BM .
# 1M      .

source_size=`du -B1 -s "${src}/${virtual_env}" | awk '{print $1}' `
# echo ${source_size} 

if [[ ${source_size} -gt ${dest_space} ]] ; then
    error "Not enough space on target drive"
    exit 1
fi

mv -v "${src}/${virtual_env}" "${dest}"

 
