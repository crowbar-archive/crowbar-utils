# -*- mode: ruby -*- # vi: set ft=ruby :

props = JSON.load(IO.read('personal.json'))

Vagrant::configure("2") do |config|

  config.vm.define :cbdev1 do |cbdev1|

    cbdev1.vm.hostname = "#{props['guest_hostname']}1" 
    cbdev1.vm.box = "#{props['box_name']}" 
    cbdev1.vm.box_url = "#{props['box_url']}" 
    cbdev1.vm.network :public_network
    cbdev1.vm.synced_folder props['synced_dir_host'], props['synced_dir_guest']

    cbdev1.vm.provider :virtualbox do |vb|
      vb.gui  = true
      vb.name = "#{props['guest_hostname']}1"
      vb.customize ["modifyvm", :id, "--cpus", props['guest_cpus']]
      vb.customize ["modifyvm", :id, "--memory", props['guest_ram']]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      # cool stuff!
      # install the plugin:  vagrant plugin install vagrant-vbguest 
      config.vbguest.auto_update = false #true by default when plugin installed
    end

    cbdev1.vm.provision :chef_solo do |chef|
      #chef.recipe_url = "http://files.vagrantup.com/getting_started/cookbooks.tar.gz"
      chef.data_bags_path = "data_bags"
      chef.json = {
        :props => props
      }
      chef.add_recipe "crowbar-dev::user-create"
      chef.add_recipe "crowbar-dev::http-proxy-client"
      chef.add_recipe "crowbar-dev::package-repo"
      chef.add_recipe "crowbar-dev::basic-packages"
      chef.add_recipe "crowbar-dev::ruby"
      chef.add_recipe "crowbar-dev::json"
      chef.add_recipe "crowbar-dev::chef-tools"
      chef.add_recipe "crowbar-dev::crowbar-1-source-and-build-prep"
      chef.add_recipe "crowbar-dev::crowbar-2-dev-setup-fetch-sync"
      chef.add_recipe "crowbar-dev::crowbar-3-add-remotes"
      chef.add_recipe "crowbar-dev::final"
    end
  end

  config.vm.define :cbdev2 do |cbdev2|

    cbdev2.vm.hostname = "#{props['guest_hostname']}2" 
    cbdev2.vm.box = "#{props['box_name']}" 
    cbdev2.vm.box_url = "#{props['box_url']}" 
    cbdev2.vm.network :public_network
    cbdev2.vm.synced_folder props['synced_dir_host'], props['synced_dir_guest']
    cbdev2.vm.provider :virtualbox do |vb|
      vb.gui  = true
      vb.name = "#{props['guest_hostname']}2"
      vb.customize ["modifyvm", :id, "--cpus", props['guest_cpus']]
      vb.customize ["modifyvm", :id, "--memory", props['guest_ram']]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      # cool stuff!
      # install the plugin:  vagrant plugin install vagrant-vbguest 
      config.vbguest.auto_update = false #true by default when plugin installed
    end

    cbdev2.vm.provision :chef_solo do |chef|
      chef.data_bags_path = "data_bags"
      chef.json = {
        :props => props
      }
      chef.add_recipe "crowbar-dev::user-create"
      chef.add_recipe "crowbar-dev::http-proxy-client"
      chef.add_recipe "crowbar-dev::package-repo"
      chef.add_recipe "crowbar-dev::basic-packages"
      chef.add_recipe "crowbar-dev::ruby"
      chef.add_recipe "crowbar-dev::json"
      chef.add_recipe "crowbar-dev::chef-tools"
      chef.add_recipe "crowbar-dev::crowbar-1-source-and-build-prep"
      chef.add_recipe "crowbar-dev::crowbar-2-dev-setup-fetch-sync"
      chef.add_recipe "crowbar-dev::crowbar-3-add-remotes"
      chef.add_recipe "crowbar-dev::final"
    end
  end

end

# __END__
#  config.vm.customize ['createhd', '--filename', extra_disk_host_file, '--size', 500 * 1024]
#  config.vm.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', extra_disk_host_file]
