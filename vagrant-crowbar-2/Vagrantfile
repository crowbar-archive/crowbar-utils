# -*- mode: ruby -*-
# vi: set ft=ruby :

props = JSON.load(IO.read('personal.json'))

Vagrant.configure("2") do |config|

  config.vm.define props['guest_hostname'] do |cb2dev|

    cb2dev.vm.hostname = "#{props['guest_hostname']}" 
    cb2dev.vm.box = "#{props['box_name']}" 
    cb2dev.vm.box_url = "#{props['box_url']}" 
    cb2dev.vm.synced_folder props['synced_dir_host'], props['synced_dir_guest']
    #cb2dev.vm.synced_folder props['cache_dir_host'], props['cache_dir_guest']
    cb2dev.vm.network :public_network

    cb2dev.vm.provider :virtualbox do |vb|
      vb.gui  = true
      vb.name = "#{props['guest_hostname']}"
      vb.customize ["modifyvm", :id, "--cpus", props['guest_cpus']]
      vb.customize ["modifyvm", :id, "--memory", props['guest_ram']]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      # cool stuff!
      # install the plugin:  vagrant plugin install vagrant-vbguest 
      #config.vbguest.auto_update = false #true by default when plugin installed
    end

    cb2dev.vm.provision :chef_solo do |chef|
      #chef.attempts = 10
      chef.json = { :props => props }
      chef.cookbooks_path = "chef/cookbooks"
      chef.roles_path = "chef/roles"
      chef.data_bags_path = "chef/data_bags"
      chef.log_level = ENV.fetch("CHEF_LOG", "debug").downcase.to_sym

      # recipes and cookbooks
      chef.add_recipe "cb2::create-user"
      chef.add_recipe "cb2::http-proxy-client"
      chef.add_recipe "cb2::package-repo"
      chef.add_recipe "cb2::ruby"
      chef.add_recipe "cb2::json"
      chef.add_recipe "cb2::chef-tools"
      chef.add_recipe "cb2::docker"
      chef.add_recipe "cb2::crowbar-1-source-and-build-prep"
      chef.add_recipe "cb2::crowbar-2-dev-setup-fetch-sync"
      chef.add_recipe "cb2::crowbar-3-add-remotes"
      chef.add_recipe "cb2::crowbar-4-test-deps"
      if props['crowbar_version'] == "2" then
        chef.add_recipe "cb2::postgresql"
      end
      chef.add_recipe "cb2::vim-setup"
      chef.add_recipe "cb2::sshfs"
    end
  end
end
